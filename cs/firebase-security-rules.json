{
  "rules": {
    "games": {
      "$gameId": {
        // Allow read/write for valid 4-letter game codes
        ".read": "$gameId.matches(/^[A-Z]{4}$/)",
        ".write": "$gameId.matches(/^[A-Z]{4}$/)",
        
        // Basic player name validation (keep it simple)
        "players": {
          "$playerId": {
            "name": {
              ".validate": "newData.isString() && newData.val().length >= 1 && newData.val().length <= 15"
            }
          }
        },
        
        // Allow player answers with basic validation
        "playerAnswers": {
          "$playerId": {
            "$sense": {
              ".validate": "newData.isString() && newData.val().length <= 50"
            }
          }
        },
        
        // Allow scores with basic limits
        "playerScores": {
          "$playerId": {
            ".validate": "newData.isNumber() && newData.val() >= 0 && newData.val() <= 50000"
          }
        },
        
        // Allow game settings
        "totalRounds": {
          ".validate": "newData.isNumber() || newData.val() === 'Infinite'"
        },
        "difficulty": {
          ".validate": "newData.isString()"
        },
        "currentRoundNumber": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        
        // Allow player ready status
        "playerReadyForNext": {
          "$playerId": {
            ".validate": "newData.isBoolean() || newData.val() === null"
          }
        },
        
        // Allow round results with consensus validation
        "roundResult": {
          "consensusStatus": {
            ".validate": "newData.isString() && (newData.val() === 'common' || newData.val() === 'nonsense')"
          }
        },
        
        // Allow other game fields like status, created, etc.
        "status": {
          ".validate": "newData.isString()"
        },
        "created": {
          ".validate": "newData.isNumber()"
        }
      }
    }
  }
}